apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "grafana.name" . }}
  namespace: {{ .Values.global.namespace }}
spec:
  replicas: {{ .Values.prometheus.replicaCount }}
  selector:
    matchLabels:
      {{- include "grafana.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "grafana.labels" . | nindent 8 }}
    spec:
      containers:
      - name: grafana
        image: "{{ .Values.grafana.image.repository }}:{{ .Values.grafana.image.tag}}"
        imagePullPolicy: {{ .Values.grafana.image.imagePullPolicy }}
        ports:
        - containerPort: 3000
          protocol: TCP

        volumeMounts:
        - mountPath: /etc/ssl/certs
          name: ca-certificates
          readOnly: true
        - mountPath: /var/lib/grafana
          name: grafana-storage

        env:
        - name: INFLUXDB_HOST
          value: monitoring-influxdb
        - name: GF_SERVER_HTTP_PORT
          value: "3000"
          # The following env variables are required to make Grafana accessible via
          # the kubernetes api-server proxy. On production clusters, we recommend
          # removing these env variables, setup auth for grafana, and expose the grafana
          # service using a LoadBalancer or a public IP.
        - name: GF_AUTH_BASIC_ENABLED
          value: "false"
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "true"
        - name: GF_AUTH_ANONYMOUS_ORG_ROLE
          value: Admin
        - name: GF_SERVER_ROOT_URL
          # If you're only using the API Server proxy, set this value instead:
          # value: /api/v1/namespaces/kube-system/services/monitoring-grafana/proxy
          value: /

      volumes:
      - name: ca-certificates
        hostPath:
          path: /etc/ssl/certs
      {{- if .Values.grafana.storageSpec }}
      - name: grafana-storage
      {{- toYaml .Values.grafana.storageSpec | nindent 8 }}
      {{- else }}
      - name: grafana-storage
        hostPath:
          path: /data/monitoring/grafana
      {{- end }}

