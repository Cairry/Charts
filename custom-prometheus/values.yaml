global:
  namespace: monitoring

nodeExporter:
  image:
    repository: registry.js.design/prometheus/node-exporter
    tag: v1.0.1
    imagePullPolicy: IfNotPresent

  resources:
    requests:
      cpu: "0.15"
      memory: "100Mi"

  tolerations:
    - key: "node-role.kubernetes.io/master"
      operator: "Exists"
      effect: "NoSchedule"

prometheus:
  replicaCount: 1
  image:
    repository: registry.js.design/prometheus/prometheus
    tag: v2.32.1
    imagePullPolicy: IfNotPresent

  service:
    port: 9090
    targetPort: 9090
    type: "NodePort"
    customNodePort: 
      enabled: true
      configure:
        nodePort: 30110

  resources:
    requests:
      cpu: "1"
      memory: "200Mi"
    limits:
      cpu: "2"
      memory: "4Gi"

  storageSpec: {}
    # persistentVolumeClaim:
    #   claimName: my-pvc-auto

grafana: 
  image:
    repository: registry.js.design/prometheus/grafana
    tag: 8.0.6
    imagePullPolicy: IfNotPresent

  resources:
    requests:
      cpu: "200m"
      memory: "500Mi"
    limits:
      cpu: "1"
      memory: "2G"

  service: 
    port: 3000
    targetPort: 3000
    type: NodePort
    customNodePort: 
      enabled: true
      configure:
        nodePort: 30114

  # 权限
  permissions:
    imageRepository: registry.js.design/library/busybox
    imageTag: latest
    imagePullPolicy: IfNotPresent

  storageSpec: {}
    # persistentVolumeClaim:
    #   claimName: my-pvc-auto

kubeStateMetrics:
  image:
    repository: registry.cn-shenzhen.aliyuncs.com/starsl/kube-state-metrics
    tag: v2.2.1
    imagePullPolicy: IfNotPresent

  nodeSelector:
    beta.kubernetes.io/os: linux

  livenessProbe:
    enabled: true 
    configure:
      httpGet:
        path: /healthz
        port: 8080
      initialDelaySeconds: 5
      timeoutSeconds: 5

  readinessProbe:
    enabled: true
    configure:
      httpGet:
        path: /
        port: 8081
      initialDelaySeconds: 5
      timeoutSeconds: 5

alertmanager: 
  replicaCount: 1

  image: 
    repository: registry.js.design/prometheus/alertmanager
    tag: v0.22.2
    imagePullPolicy: IfNotPresent

  readinessProbe:
    enabled: true
    configure:
      httpGet:
        path: /#/status
        port: 9093
      initialDelaySeconds: 30
      timeoutSeconds: 30
    
  resources:
    limits:
      cpu: 200m
      memory: 200Mi
    requests:
      cpu: 5m
      memory: 40Mi

  service: 
    port: 9093
    targetPort: 9093
    type: "NodePort"
    customNodePort: 
      enabled: true
      configure:
        nodePort: 30111

  prometheusalertWebHook:
    # 飞书告警
    feishu:
      enabled: true
      url: https://open.feishu.cn/open-apis/bot/v2/hook/2ff32dbc-6797-4d75-xxxxxxxxx
    # 钉钉告警
    dingding:
      enabled: false 
      url: https://oapi.dingtalk.com/robot/send?access_token=6fdf79868xxxxxxxx
    # 企业微信告警
    qywechat:
      enabled: false
      url: https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=xxxxx
    # 邮件告警
    email:
      enabled: false
      emailHost: "smtp.qq.com"
      emailHostPort: "465"
      sendEmailUser: "send@qq.com"
      sendEmailPass: "xxxxxx"
      receiveEmailUser: "receive1@qq.com,receive2@qq.com"

  storageSpec: {}
    # volumeClaimTemplates:
    # - metadata:
    #     name: storage-volume
    #     namespace: monitoring
    #   spec:
    #     storageClassName: managed-nfs-storage
    #     accessModes: [ "ReadWriteOnce" ]
    #     resources:
    #       requests:
    #         storage: 10Gi

prometheusAlert:
  replicaCount: 1
  image:
    repository: registry.js.design/prometheus/prometheus-alert
    tag: latest
    imagePullPolicy: IfNotPresent

  service: 
    port: 8080
    targetPort: 8080
    type: "NodePort"
    customNodePort: 
      enabled: true
      configure:
        nodePort: 30112

  resources:
    limits:
      cpu: 200m
      memory: 200Mi
    requests:
      cpu: 5m
      memory: 40Mi

  storageSpec: {}
    # persistentVolumeClaim:
    #   claimName: my-pvc-auto

pushgateway:
  replicaCount: 1
  image:
    repository: registry.js.design/prometheus/pushgateway
    tag: latest
    imagePullPolicy: IfNotPresent

  service: 
    port: 9091
    targetPort: 9091
    type: "NodePort"
    customNodePort: 
      enabled: true
      configure:
        nodePort: 30113

  resources:
    limits:
      cpu: 500m
      memory: 500Mi
    requests:
      cpu: 5m
      memory: 40Mi