{{- if .Values.console.enabled }}
{{- $nameReplicaCount := int .Values.namesrv.replicas }}
{{- $nameServerList := list }}
{{- range $i := until $nameReplicaCount }}
{{- $namesrvName := include "namesrv.fullname" $ -}}
{{- $nameServerList = append $nameServerList (printf "%s-%s-%d:%d" $namesrvName "namesrv" $i 9876 ) }}
{{- end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "console.fullname" . }}-console
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "console.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.console.replicas }}
  minReadySeconds: 10
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  selector:
    matchLabels:
      {{- include "console.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "console.labels" . | nindent 8 }}
    spec:
    {{- with .Values.console.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: console
          image: "{{ .Values.console.image}}:{{ .Values.console.imageTag }}"
          imagePullPolicy: {{ .Values.console.imagePullPolicy }}

          env:
          - name: "JAVA_OPTS"
            value: "-Drocketmq.namesrv.addr={{ join ";" $nameServerList }} -Dcom.rocketmq.sendMessageWithVIPChannel=false"

          ports:
            - name: http
              containerPort: 8080
              protocol: TCP

          {{- if .Values.console.readinessProbe.enabled }}
          readinessProbe:
            tcpSocket:
              port: 8080
            {{- toYaml .Values.console.readinessProbe.config | nindent 12 }}
          {{- end }}

          {{- if .Values.console.livenessProbe.enabled }}
          livenessProbe:
            tcpSocket:
              port: 8080
            {{- toYaml .Values.console.livenessProbe.config | nindent 12 }}
            {{- end }}

          resources:
            {{- toYaml .Values.console.resources | nindent 12 }}

    {{- with .Values.console.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}

    {{- if .Values.console.podAntiAffinityEnabled }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    {{- include "console.selectorLabels" . | nindent 20 }}
              weight: 1
    {{- end }}

    {{- if .Values.console.nodeAffinity }}
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              {{- toYaml .Values.console.nodeAffinity | nindent 14 }}
    {{- end }}

    {{- with .Values.console.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end }}