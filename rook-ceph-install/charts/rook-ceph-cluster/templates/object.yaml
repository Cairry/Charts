#################################################################################################################
# Create an object store with settings for replication in a production environment. A minimum of 3 hosts with
# OSDs are required in this example.
#  kubectl create -f object.yaml
#################################################################################################################

{{- with .Values.object }}
apiVersion: ceph.rook.io/v1
kind: CephObjectStore
metadata:
  name: {{ .name }}
  namespace: {{ $.Release.Namespace }}
spec:
  # The pool spec used to create the metadata pools. Must use replication.
  metadataPool:
    failureDomain: host
    replicated:
      size: {{ .metadataPoolSize }}
  # The pool spec used to create the data pool. Can use replication or erasure coding.
  dataPool:
    failureDomain: host
    replicated:
      size: {{ .dataPoolSize }}
  # Whether to preserve metadata and data pools on object store deletion
  preservePoolsOnDelete: false
  # The gateway service configuration
  gateway:
    # type of the gateway (s3)
    type: s3
    # A reference to the secret in the rook namespace where the ssl certificate is stored
    sslCertificateRef: {{ if .gateway.tls.enabled }}{{ .gateway.tls.sslCertificateRef }}{{ end }}
    # The port that RGW pods will listen on (http)
    port: {{ .gateway.port }}
    # The port that RGW pods will listen on (https). An ssl certificate is required.
    securePort: {{ if .gateway.tls.enabled }}{{ .gateway.tls.securePort }}{{ end}}
    # The number of pods in the rgw deployment (ignored if allNodes=true)
    instances: {{ .gateway.instances }}
    # The affinity rules to apply to the rgw deployment or daemonset.
    placement:
    {{- with .gateway.placement }}
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: {{ .nodeSelectorTermsMatchExpressions.key }}
              operator: In
              values:
              {{- range .nodeSelectorTermsMatchExpressions.values }}
              - {{ . }}
              {{- end }}
    {{- end }}
    #  nodeAffinity:
    #    requiredDuringSchedulingIgnoredDuringExecution:
    #      nodeSelectorTerms:
    #      - matchExpressions:
    #        - key: role
    #          operator: In
    #          values:
    #          - rgw-node
    #  tolerations:
    #  - key: rgw-node
    #    operator: Exists
    #  podAffinity:
    #  podAntiAffinity:
    # A key/value list of annotations
    annotations:
    #  key: value
    resources:
    {{- with .gateway.placement }}
{{ toYaml . |indent 6 }}
    {{- end }}

    # The requests and limits set here, allow the object store gateway Pod(s) to use half of one CPU core and 1 gigabyte of memory
    #  limits:
    #    cpu: "500m"
    #    memory: "1024Mi"
    #  requests:
    #    cpu: "500m"
    #    memory: "1024Mi"
    # priorityClassName: my-priority-class
{{- end }}